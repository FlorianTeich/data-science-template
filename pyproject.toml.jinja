[project]
name = "{{ project_name }}"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">={{ python_version }}"
authors = [
  {name = "{{author}}", email = "{{mail_address}}"},
]
maintainers = [
  {name = "{{author}}", email = "{{mail_address}}"}
]
license = "MIT"
license-files = ["LICEN[CS]E.*"]
keywords = [""]
classifiers = [
  "Development Status :: Beta",
  "Programming Language :: Python"
]
dependencies = [
  "fastapi",
  "lib-a",
  "uvicorn[standard]",
]
optional-dependencies.datascience = [
  "fastparquet",
  "jupyter",
  "mlflow",
  "numpy",
  "optuna",
  "pandas",
  "polars",
  "pyarrow",
  "scikit-learn",
  "skrub",
  "tqdm",
]
optional-dependencies.tools = [
  "click",
  "conventional-pre-commit",
  "coverage",
  "cyclonedx-bom",
  "cyclonedx-python-lib",
  "deptry",
  "mkdocs",
  "mkdocs-jupyter",
  "mkdocs-material",
  "mkdocstrings-python",
  "mutmut",
  "opentelemetry-distro",
  "pip-audit",
  "pre-commit",
  "psutil",
  "pynvml",
  "pyright",
  "pytest",
  "python-dotenv",
  "rich",
  "ruff",
  "textual",
  "ty",
  "uv",
]

[tool.setuptools.packages.find]
where = [ "." ]

[tool.ruff]
# Set the maximum line length to 88.
line-length = 88

lint.extend-select = [
  "A",    # flake8-builtins
  "ARG",  # flake8-unused-arguments
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle 
  "ERA",  # eradicate
  "F",    # pyflakes
  "FIX",  # flake8-fixme
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-string-concatenation
  "LOG",  # flake8-logging
  "N",    # PEP8-naming
  "NPY",  # numpy
  "PD",   # pandas-vet
  "PL",   # pylint 
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-pathlib
  "RET",  # flake8-return
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "TD",   # flake8-todos
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
]
lint.ignore = [
  "COM812", # missing-trailing-comma
]
lint.pydocstyle.convention = "google"

[tool.uv.sources]
lib-a = { path = "./lib_a", editable = true }
